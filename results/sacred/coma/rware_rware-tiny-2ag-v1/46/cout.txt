CHECK input_shape: 142
CHECK icm_agent action_shape: 5
cuda:0
cuda:0
Check term: 0
CHECK t: 0
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 1
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 2
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 3
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 4
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 5
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 6
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 7
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 8
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 9
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 10
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 11
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 12
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 13
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 14
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 15
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 16
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 17
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 18
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 19
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 20
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 21
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 22
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 23
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 24
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK t: 25
IN BSMAC INPUT SHAPE: torch.Size([20, 73])
torch.Size([10, 2])
CHECK BATCH STATE: torch.Size([10, 26, 142])
CHECK BATCH REWARD: torch.Size([10, 26, 1])
10
max_t: 26
CHECK rewards shape: 10 25
CHECK actions shape 10 26 tensor([[0],
        [4]], device='cuda:0')
CHECK actions shape 10 26
obs shape: torch.Size([10, 26, 2, 71])
CHECK obs: torch.Size([10, 26, 2, 71])
CHECK states2: torch.Size([10, 26, 142])
CHECK states: torch.Size([10, 26, 142])
CHECK next states: torch.Size([10, 26, 142])
tensor([7., 4., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1.,
        8., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       device='cuda:0')
tensor([7., 4., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1.,
        8., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       device='cuda:0')
tensor([7., 4., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0.],
       device='cuda:0')
tensor([1., 8., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       device='cuda:0')
tensor([7., 4., 0., 0., 0., 1., 0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0.,
        0., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0.,
        1., 0., 0., 1., 0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0.,
        0., 0., 0., 0., 1., 0., 0., 0., 1., 1., 0., 1., 0., 0., 0., 1., 0., 1.,
        8., 0., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0.,
        0., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0., 0., 0., 1.,
        0., 0., 0., 1., 1., 0., 0., 1., 0., 0., 0., 1., 0., 0., 1., 0., 0., 0.,
        0., 0., 0., 1., 0., 0., 0., 0., 0., 0., 1., 0., 0., 0., 0., 0.],
       device='cuda:0')
CHECK action:: torch.Size([10, 26, 2, 1, 5])
encode_state:  torch.Size([10, 26, 128])
encode_next_state:  torch.Size([10, 26, 128])
torch.Size([10, 52, 128])
CHECK_________________________
cuda:0
action: torch.Size([10, 26, 2, 5])
action: torch.Size([10, 26, 4])
