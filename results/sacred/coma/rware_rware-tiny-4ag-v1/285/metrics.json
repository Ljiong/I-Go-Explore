{
  "advantage_mean": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      -0.034375949781768174
    ]
  },
  "agent_grad_norm": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.126233"
    ],
    "values": [
      NaN
    ]
  },
  "cell_counter": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:37.649231"
    ],
    "values": [
      {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": 158.5
      }
    ]
  },
  "coma_loss": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      NaN
    ]
  },
  "critic_grad_norm": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      37.8635368347168
    ]
  },
  "critic_loss": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      257.91156005859375
    ]
  },
  "ep_length_mean": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:31.333500"
    ],
    "values": [
      500.0
    ]
  },
  "go_explore_return": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:37.649231"
    ],
    "values": [
      {
        "dtype": "float32",
        "py/object": "numpy.ndarray",
        "values": [
          0.20000000298023224
        ]
      }
    ]
  },
  "icm_reward_forward_loss": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:37.770231"
    ],
    "values": [
      {
        "py/reduce": [
          {
            "py/function": "torch._utils._rebuild_tensor_v2"
          },
          {
            "py/tuple": [
              {
                "py/reduce": [
                  {
                    "py/function": "torch.storage._load_from_bytes"
                  },
                  {
                    "py/tuple": [
                      {
                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADE4MTg5NjU1NDA5MTJxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAxODE4OTY1NTQwOTEycQFhLgEAAAAAAAAAhSE7PA=="
                      }
                    ]
                  }
                ]
              },
              0,
              {
                "py/tuple": []
              },
              {
                "py/tuple": []
              },
              true,
              {
                "py/reduce": [
                  {
                    "py/type": "collections.OrderedDict"
                  },
                  {
                    "py/tuple": []
                  },
                  null,
                  null,
                  {
                    "py/tuple": []
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "icm_reward_inverse_loss": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:37.770231"
    ],
    "values": [
      {
        "py/reduce": [
          {
            "py/function": "torch._utils._rebuild_tensor_v2"
          },
          {
            "py/tuple": [
              {
                "py/reduce": [
                  {
                    "py/function": "torch.storage._load_from_bytes"
                  },
                  {
                    "py/tuple": [
                      {
                        "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADE4MTg5NjU1NDgzMDRxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAxODE4OTY1NTQ4MzA0cQFhLgEAAAAAAAAAPI8YQg=="
                      }
                    ]
                  }
                ]
              },
              0,
              {
                "py/tuple": []
              },
              {
                "py/tuple": []
              },
              true,
              {
                "py/reduce": [
                  {
                    "py/type": "collections.OrderedDict"
                  },
                  {
                    "py/tuple": []
                  },
                  null,
                  null,
                  {
                    "py/tuple": []
                  }
                ]
              }
            ]
          }
        ]
      }
    ]
  },
  "pi_max": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.126233"
    ],
    "values": [
      1.0
    ]
  },
  "q_taken_mean": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      -0.2702652288942921
    ]
  },
  "return_mean": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:31.332500"
    ],
    "values": [
      0.0
    ]
  },
  "return_std": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:31.333500"
    ],
    "values": [
      0.0
    ]
  },
  "target_mean": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      -0.40259000817123725
    ]
  },
  "td_error_abs": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:38.125230"
    ],
    "values": [
      24.993985172193877
    ]
  },
  "traj_length": {
    "steps": [
      5000
    ],
    "timestamps": [
      "2023-07-10T17:44:37.649231"
    ],
    "values": [
      {
        "dtype": "float64",
        "py/object": "numpy.ndarray",
        "values": 81.9
      }
    ]
  }
}