Check term: 0
cell_counter 1967.0000
go_explore_return 0.0000
test_cell_counter 1955.8000
E:\Anaconda\envs\epymarl\lib\site-packages\numpy\core\_methods.py:163: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  arr = asanyarray(a)
test_go_explore_return 0.0000
Check term: 27500
cell_counter 1923.5000
go_explore_return 0.0000
test_cell_counter 1959.0000
E:\Anaconda\envs\epymarl\lib\site-packages\numpy\core\_methods.py:163: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  arr = asanyarray(a)
test_go_explore_return 0.0500
Check term: 55000
cell_counter 1960.0000
go_explore_return 0.0000
test_cell_counter 1959.0333
test_go_explore_return 0.1000
Check term: 82500
