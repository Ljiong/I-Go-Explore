{
  "artifacts": [],
  "command": "my_main",
  "experiment": {
    "base_dir": "e:\\study\\Thesis\\epymarl\\src",
    "dependencies": [
      "munch==2.5.0",
      "numpy==1.21.5",
      "sacred==0.8.2",
      "torch==1.13.1"
    ],
    "mainfile": "main.py",
    "name": "pymarl",
    "repositories": [
      {
        "commit": "f355a55262ac9afecdb53368fec6337c549cc160",
        "dirty": true,
        "url": "https://github.com/uoe-agents/epymarl.git"
      },
      {
        "commit": "f355a55262ac9afecdb53368fec6337c549cc160",
        "dirty": true,
        "url": "https://github.com/uoe-agents/epymarl.git"
      },
      {
        "commit": "f355a55262ac9afecdb53368fec6337c549cc160",
        "dirty": true,
        "url": "https://github.com/uoe-agents/epymarl.git"
      }
    ],
    "sources": [
      [
        "main.py",
        "_sources\\main_c0fd19716be8b8a9a5c2f2dafee418aa.py"
      ],
      [
        "run.py",
        "_sources\\run_a250c3bbe5c49ffe18abd2a130106eb2.py"
      ],
      [
        "utils\\logging.py",
        "_sources\\logging_ba48b9c5a24cea2e9d5c5a89e052e0a1.py"
      ]
    ]
  },
  "fail_trace": [
    "Traceback (most recent call last):\n",
    "  File \"E:\\Anaconda\\envs\\epymarl\\lib\\site-packages\\wrapt\\wrappers.py\", line 523, in __call__\n    args, kwargs)\n",
    "  File \"E:\\Anaconda\\envs\\epymarl\\lib\\site-packages\\sacred\\config\\captured_function.py\", line 42, in captured_function\n    result = wrapped(*args, **kwargs)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\main.py\", line 40, in my_main\n    run(_run, config, _log)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\run.py\", line 61, in run\n    run_sequential(args=args, logger=logger)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\run.py\", line 239, in run_sequential\n    go_explore_runner.run(episode_sample, 500)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\runners\\go_exploration.py\", line 258, in run\n    result.append(self.get_trajactory(start_cell))\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\runners\\go_exploration.py\", line 203, in get_trajactory\n    traj = self.go_explore(start_cell,250)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\runners\\go_exploration.py\", line 165, in go_explore\n    actions = self.mac.select_actions(self.batch, t_ep=self.t, t_env=self.t_env)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\controllers\\go_explore_controller.py\", line 25, in select_actions\n    chosen_actions = self.action_selector.select_action(avail_actions)\n",
    "  File \"e:\\study\\Thesis\\epymarl\\src\\components\\action_selectors.py\", line 99, in select_action\n    m = Categorical(avail_actions)\n",
    "  File \"E:\\Anaconda\\envs\\epymarl\\lib\\site-packages\\torch\\distributions\\categorical.py\", line 66, in __init__\n    super(Categorical, self).__init__(batch_shape, validate_args=validate_args)\n",
    "  File \"E:\\Anaconda\\envs\\epymarl\\lib\\site-packages\\torch\\distributions\\distribution.py\", line 57, in __init__\n    f\"Expected parameter {param} \"\n",
    "ValueError: Expected parameter probs (Tensor of shape (10, 4, 5)) of distribution Categorical(probs: torch.Size([10, 4, 5])) to satisfy the constraint Simplex(), but found invalid values:\ntensor([[[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]],\n\n        [[nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan],\n         [nan, nan, nan, nan, nan]]], device='cuda:0')\n"
  ],
  "heartbeat": "2023-05-18T21:30:18.533040",
  "host": {
    "ENV": {},
    "cpu": "Unknown",
    "gpus": {
      "driver_version": "516.01",
      "gpus": [
        {
          "model": "NVIDIA GeForce MX150",
          "persistence_mode": false,
          "total_memory": 2048
        }
      ]
    },
    "hostname": "Jiong",
    "os": [
      "Windows",
      "Windows-10-10.0.22000-SP0"
    ],
    "python_version": "3.7.16"
  },
  "meta": {
    "command": "my_main",
    "options": {
      "--beat-interval": null,
      "--capture": null,
      "--comment": null,
      "--debug": false,
      "--enforce_clean": false,
      "--file_storage": null,
      "--force": false,
      "--help": false,
      "--loglevel": null,
      "--mongo_db": null,
      "--name": null,
      "--pdb": false,
      "--print-config": false,
      "--priority": null,
      "--queue": false,
      "--s3": null,
      "--sql": null,
      "--tiny_db": null,
      "--unobserved": false,
      "COMMAND": null,
      "UPDATE": [
        "env_args.time_limit=50",
        "env_args.key=rware:rware-tiny-4ag-v1"
      ],
      "help": false,
      "with": true
    }
  },
  "resources": [],
  "result": null,
  "start_time": "2023-05-18T21:29:31.424213",
  "status": "FAILED",
  "stop_time": "2023-05-18T21:30:18.574058"
}