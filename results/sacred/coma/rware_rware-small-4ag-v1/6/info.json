{
  "advantage_mean": [
    -6.929447650909424e-05,
    -0.00043567571640014646
  ],
  "advantage_mean_T": [
    5000,
    25000
  ],
  "agent_grad_norm": [
    0.14527206122875214,
    0.04863828793168068
  ],
  "agent_grad_norm_T": [
    5000,
    25000
  ],
  "coma_loss": [
    -0.008877347223460674,
    -0.006462104618549347
  ],
  "coma_loss_T": [
    5000,
    25000
  ],
  "critic_grad_norm": [
    4.920840263366699,
    4.26409912109375
  ],
  "critic_grad_norm_T": [
    5000,
    25000
  ],
  "critic_loss": [
    36.9176139831543,
    91.35199737548828
  ],
  "critic_loss_T": [
    5000,
    25000
  ],
  "ep_length_mean": [
    500.0,
    500.0
  ],
  "ep_length_mean_T": [
    5000,
    25000
  ],
  "episode": [
    40
  ],
  "episode_T": [
    20000
  ],
  "icm_reward_forward_loss": [
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI2NTg2MTY5MjA5NDRxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAyNjU4NjE2OTIwOTQ0cQFhLgEAAAAAAAAAI8ekPA=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            true,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI2NTg2MTcwMjIyMjRxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAyNjU4NjE3MDIyMjI0cQFhLgEAAAAAAAAAIxKZOw=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            true,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "icm_reward_forward_loss_T": [
    5000,
    25000
  ],
  "icm_reward_inverse_loss": [
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI2NTg2MTY5MTk2MDBxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAyNjU4NjE2OTE5NjAwcQFhLgEAAAAAAAAAAMDpPg=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            true,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    },
    {
      "py/reduce": [
        {
          "py/function": "torch._utils._rebuild_tensor_v2"
        },
        {
          "py/tuple": [
            {
              "py/reduce": [
                {
                  "py/function": "torch.storage._load_from_bytes"
                },
                {
                  "py/tuple": [
                    {
                      "py/b64": "gAKKCmz8nEb5IGqoUBkugAJN6QMugAJ9cQAoWBAAAABwcm90b2NvbF92ZXJzaW9ucQFN6QNYDQAAAGxpdHRsZV9lbmRpYW5xAohYCgAAAHR5cGVfc2l6ZXNxA31xBChYBQAAAHNob3J0cQVLAlgDAAAAaW50cQZLBFgEAAAAbG9uZ3EHSwR1dS6AAihYBwAAAHN0b3JhZ2VxAGN0b3JjaApGbG9hdFN0b3JhZ2UKcQFYDQAAADI2NTg2MTcwMTEyODBxAlgGAAAAY3VkYTowcQNLAU50cQRRLoACXXEAWA0AAAAyNjU4NjE3MDExMjgwcQFhLgEAAAAAAAAAADjyPg=="
                    }
                  ]
                }
              ]
            },
            0,
            {
              "py/tuple": []
            },
            {
              "py/tuple": []
            },
            true,
            {
              "py/reduce": [
                {
                  "py/type": "collections.OrderedDict"
                },
                {
                  "py/tuple": []
                },
                null,
                null,
                {
                  "py/tuple": []
                }
              ]
            }
          ]
        }
      ]
    }
  ],
  "icm_reward_inverse_loss_T": [
    5000,
    25000
  ],
  "pi_max": [
    0.2300208984375,
    0.274032470703125
  ],
  "pi_max_T": [
    5000,
    25000
  ],
  "q_taken_mean": [
    -0.251780810546875,
    -0.08272799072265626
  ],
  "q_taken_mean_T": [
    5000,
    25000
  ],
  "return_mean": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.1
    },
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.075
    }
  ],
  "return_mean_T": [
    5000,
    25000
  ],
  "return_std": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.30000000000000004
    },
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.26339134382131846
    }
  ],
  "return_std_T": [
    5000,
    25000
  ],
  "target_mean": [
    0.53880107421875,
    0.707170361328125
  ],
  "target_mean_T": [
    5000,
    25000
  ],
  "td_error_abs": [
    1.0586244140625,
    1.698158984375
  ],
  "td_error_abs_T": [
    5000,
    25000
  ],
  "test_ep_length_mean": [
    500.0
  ],
  "test_ep_length_mean_T": [
    5000
  ],
  "test_return_mean": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.04
    }
  ],
  "test_return_mean_T": [
    5000
  ],
  "test_return_std": [
    {
      "dtype": "float64",
      "py/object": "numpy.float64",
      "value": 0.19595917942265428
    }
  ],
  "test_return_std_T": [
    5000
  ]
}